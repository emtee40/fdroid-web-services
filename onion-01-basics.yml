---
- name: "setup http proxy for onion endpoint"
  hosts: onions
  gather_facts: yes

  tasks:

    - assert:
        that:
          - ansible_distribution == "Debian"
          - ansible_distribution_release == "bullseye"

    - name: "user: lock root account password (for preventing other than pubkey-auth logins)"
      user: name=root password_lock=yes

    - name: "hostname: set hostname"
      ansible.builtin.hostname:
        name: onion01
        use: systemd

    - name: "include_role: set up unattended-upgrades"
      include_role:
        name: unattended_upgrades

    ##
    # install and configure some basic tools
    #

    - name: "apt: install some basic tools"
      apt:
        install_recommends: no
        state: present
        name:
          - vim
    - name: setup basic vimrc
      copy:
        dest: /root/.vimrc
        content: |
          syntax on
          set mouse-=a
        owner: root
        group: root
        mode: 0644

    ##
    # SSH
    #

    - name: "sshd - require public key authentication, disallow password auth"
      lineinfile:
        path: '/etc/ssh/sshd_config'
        regexp: '^[\s#]*PasswordAuthentication .*'
        line: 'PasswordAuthentication no'
      notify: reload_sshd

    - name: "sshd - require public key authentication, disallow password auth"
      lineinfile:
        path: '/etc/ssh/sshd_config'
        regexp: '^[\s#]*PermitRootLogin .*'
        line: 'PermitRootLogin prohibit-password'
      notify: reload_sshd

    ##
    # firewall
    #

    - name: "deploy persistent ipv4 iptables firewall rules"
      copy:
        dest: /etc/iptables/rules.v4
        content: |
            *filter
            :INPUT DROP [0:0]
            :FORWARD ACCEPT [0:0]
            :OUTPUT ACCEPT [0:0]
            -A INPUT -i lo -j ACCEPT
            -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
            {% for ip in allowed_to_ssh %}
            -A INPUT -p tcp -m tcp -s {{ ip }} --dport 22 -j ACCEPT
            {% endfor %}
            -A INPUT -p udp -j DROP
            COMMIT
      notify: reload_iptables
    - name: "deploy persistent ipv6 iptables firewall rules"
      copy:
        dest: /etc/iptables/rules.v6
        content: |
            *filter
            :INPUT DROP [0:0]
            :FORWARD ACCEPT [0:0]
            :OUTPUT ACCEPT [0:0]
            -A INPUT -i lo -j ACCEPT
            -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
            {% for ip in allowed_to_ssh_6 %}
            -A INPUT -p tcp -m tcp -s {{ ip }} --dport 22 -j ACCEPT
            {% endfor %}
            -A INPUT -p udp -j DROP
            COMMIT
      notify: reload_iptables


  handlers:
    - name: reload_iptables
      systemd:
        name: netfilter-persistent.service
        state: restarted
    - name: reload_sshd
      systemd:
        name: sshd.service
        state: reloaded
