---
image: debian:bookworm-slim

stages:
  - lint
  - test

before_script:
  - export LC_ALL=C.UTF-8
  - export DEBIAN_FRONTEND=noninteractive
  - echo Etc/UTC > /etc/timezone
  - echo 'quiet "1";'
        'APT::Install-Recommends "0";'
        'APT::Install-Suggests "0";'
        'Acquire::Retries "20";'
        'APT::Get::Assume-Yes "true";'
        'Dpkg::Use-Pty "0";'
      > /etc/apt/apt.conf.d/99gitlab
  - apt-get update
  - apt-get dist-upgrade


.ansible-template: &ansible-template
  - apt-get install ansible ansible-lint git python3-apt
  # fix [WARNING]: Ansible is being run in a world writable directory
  - chmod -R go-w $CI_PROJECT_DIR
  # vault won't work in CI because the password can't be decrypted
  - sed -i '/vault_password_file/d' ansible.cfg
  - rm group_vars/*/secret.yml
  # readable output from ansible
  - export ANSIBLE_LOAD_CALLBACK_PLUGINS=1
  - export ANSIBLE_STDOUT_CALLBACK=yaml


# jobs ------------------------------------------------------------------------#

ansible-lint:
  stage: lint
  script:
    - *ansible-template
    # TODO these are disabled until someone fixes it
    - ansible-lint --exclude=.galaxy --skip-list experimental,fqcn,name origin-04-mirror-push.yml

ansible-playbook-syntax-check:
  stage: lint
  script:
    - *ansible-template
    - tools/lint-ansible-syntax-check

shellcheck:
  stage: lint
  script:
    - apt-get install shellcheck
    - shellcheck files/push-to-mirror.sh


yamllint:
  stage: lint
  only:
    changes:
      - ".*.yml"
      - "*.yml"
      - "*/*.yml"
      - "*/*/*.yml"
      - "*/*/*/*.yml"
  script:
    - apt-get install yamllint
    - tools/lint-yamllint


# The ansible setup assumes sshd is already there, since that it how
# it connects to the server that it configures. So it has to be
# explicitly installed here in this job.
test origin:
  stage: test
  script:
    - *ansible-template
    - apt-get install openssh-server sudo shellcheck
    - sed -i 's,fdroidOrigin,localhost,g' hosts.yml
    - ansible-playbook
        --connection local
        --limit localhost
        --extra-vars "CI=$CI"
        --verbose
        origin-01-basics.yml
    - ansible-playbook
        --connection local
        --limit localhost
        --extra-vars "CI=$CI"
        --verbose
        origin-04-mirror-push.yml

    # check cron syntax
    - for f in /etc/cron.d/*-*; do echo "$ cat $f | crontab"; cat $f | crontab; done

    # run SSH extended test mode https://www.simplified.guide/ssh/test-config
    - test -d /run/sshd || mkdir /run/sshd
    - /usr/sbin/sshd -t

    # check syntax of generated scripts, skip system provided apt-compat
    - shellcheck $(ls -1 /etc/cron.*ly/* | grep -v apt-compat)
