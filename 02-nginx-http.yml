---
- name: "todo merge this script"
  hosts: endpoints

  tasks:

    - assert:
        that:
          - ansible_distribution == "Debian"
          - ansible_distribution_release in ["bullseye", "bookworm"]

    - name: "basic nginx setup"
      block:
        - apt:
            install_recommends: no
            state: present
            name:
              - nginx
              - geoip-database
              - libnginx-mod-http-geoip
        - name: "blockinfile: nginx.conf customization"
          blockinfile:
            path: "/etc/nginx/nginx.conf"
            insertafter: 'http {'
            marker: "## {mark} ANSIBLE MANAGED BLOCK"
            content: |
                proxy_cache_path  /var/cache/nginx  levels=1:2  keys_zone=DEFAULT_ZONE:10m  inactive=24h  max_size={{ cache_default_zone_max_size }};
                geoip_country /usr/share/GeoIP/GeoIPv6.dat;
                log_format privacy '0.0.0.0 - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "-" $geoip_country_code';
            validate: "/bin/bash -c 'nginx -t # %s'"
          notify: nginx_reload
        - name: "replace: configure privacy freindly nginx access logging"
          replace:
            path: "/etc/nginx/nginx.conf"
            regexp: "access_log .*;"
            replace: "access_log /var/log/nginx/access.log privacy;"
            validate: "/bin/bash -c 'nginx -t # %s'"
          notify: nginx_reload
        - name: "lineinfile: configure nginx.conf worker_rlimit_nofile"
          lineinfile:
            path: /etc/nginx/nginx.conf
            regexp: "\\s*worker_rlimit_nofile\\s.*"
            insertbefore: "events {"
            line: "worker_rlimit_nofile 50000;"
            validate: "/bin/bash -c 'nginx -t # %s'"
        - name: "lineinfile: configure nginx.conf worker_connections"
          lineinfile:
            path: /etc/nginx/nginx.conf
            regexp: "\\s*worker_connections\\s.*"
            insertafter: 'events {'
            line: "\tworker_connections 4000;"
            validate: "/bin/bash -c 'nginx -t # %s'"


    - name: "configure nginx"
      block:
        - name: "nginx : remove debians pre-configured default site"
          file:
            path: "/etc/nginx/sites-enabled/default"
            state: absent
        - name: "nginx : deploy http config"
          template:
            src: site-http.j2
            dest: "/etc/nginx/sites-available/http"
            owner: root
            group: root
            validate: "/bin/bash -c 'nginx -t # %s'"
          notify: nginx_reload
        - name: "nginx : enable http config"
          file:
            src: "/etc/nginx/sites-available/http"
            dest: "/etc/nginx/sites-enabled/http"
            state: link

  handlers:
    - name: nginx_reload
      service:
        name: nginx
        state: reloaded
