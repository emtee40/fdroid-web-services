---
- name: |-
    setup permanent ssh tunnels for forwarding certmachine port 80 to a
    local socket on each and every endpoint for certbot acme authentication
  hosts: certmachine
  become: yes
  become_method: sudo

  tasks:

    - assert:
        that:
          - ansible_distribution == "Debian"
          - ansible_distribution_release == "bullseye"

    - copy:
        dest: "/home/debian/tunscript.{{ item }}.sh"
        content: |
          #! /bin/bash
          
          ssh -v -N \
            -oPasswordAuthentication=no \
            -oIdentitiesOnly=yes \
            -oForwardAgent=no \
            -oForwardX11=no \
            -oForwardX11Trusted=no \
            -oGSSAPIDelegateCredentials=no \
            -oExitOnForwardFailure=yes \
            -oServerAliveInterval=30 \
            -oServerAliveCountMax=3 \
            -oStrictHostKeyChecking=yes \
            -oVisualHostKey=no \
            -R{{ cert_tun_port }}:localhost:80 \
            -i /home/debian/.ssh/id_ssh_rsa_pushkey \
            tlskeys@{{ hostvars[item].endpoint_ip }}
        owner: debian
        group: debian
        mode: 0700
      loop: "{{ groups['endpoints'] }}"


    - copy:
        dest: "/lib/systemd/system/certbot-acme-tun-{{ item }}.service"
        owner: "root"
        group: "root"
        mode: 0644
        content: |
          [Unit]
          Description=SSH tunnel for handling certbot acme challenges
          After=network.target

          [Install]
          WantedBy=multi-user.target

          [Service]
          Type=simple
          User=debian
          SyslogIdentifier=certbot-acme-tun-{{ item }}
          ExecStart=/bin/bash /home/debian/tunscript.{{ item }}.sh
          Restart=on-failure
          RestartSec=60s
      loop: "{{ groups['endpoints'] }}"

    - systemd:
        daemon_reload: yes

    - systemd:
        state: started
        enabled: yes
        service: "certbot-acme-tun-{{ item }}.service" 
      loop: "{{ groups['endpoints'] }}"
